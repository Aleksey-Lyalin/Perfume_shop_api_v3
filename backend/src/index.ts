// import Fastify from 'fastify'
// import perfumeRoutes from './routes/perfume'
// import path from 'path'
// import fastifyMultipart from '@fastify/multipart'
// import fastifyStatic from '@fastify/static'


// const app = Fastify({ logger: true })

// // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ multipart
// app.register(fastifyMultipart)

// // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –ø–∞–ø–∫–∏ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
// app.register(fastifyStatic, {
//   root: path.join(__dirname, '../public'),
//   prefix: '/public/', // URL ‚Üí /public/images/...
// })

// // –†–æ—É—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
// app.register(uploadRoutes, { prefix: '/api' })

// app.register(perfumeRoutes, { prefix: '/api' })

// app.listen({ port: 3000 }, (err, address) => {
//   if (err) {
//     app.log.error(err)
//     process.exit(1)
//   }
//   console.log(`Server running at ${address}`)
// })
import Fastify from 'fastify'
import path from 'path'
import fastifyMultipart from '@fastify/multipart'
import fastifyStatic from '@fastify/static'
import fastifyCors from '@fastify/cors'
import { PATHS } from './config/paths'
import dotenv from 'dotenv'
import uploadRoutes from './routes/upload'
import perfumeRoutes from './routes/perfume'

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config()

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const app = Fastify({ 
  logger: true,
  ajv: {
    customOptions: {
      removeAdditional: 'all',
      coerceTypes: true,
      useDefaults: true
    }
  }
})

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–ª–∞–≥–∏–Ω—ã
async function registerPlugins() {
  // CORS –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º
  await app.register(fastifyCors, {
    origin: process.env.FRONTEND_URL || 'http://localhost:5173',
    credentials: true
  })

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑–¥–∞—á–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
  await app.register(fastifyStatic, {
    root: path.dirname(PATHS.IMAGES_ROOT), // –ö–æ—Ä–Ω–µ–≤–∞—è –ø–∞–ø–∫–∞ public
    prefix: '/', // –ë–∞–∑–æ–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å
    decorateReply: false
  })

  // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ multipart –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
  await app.register(fastifyMultipart, {
    limits: {
      fileSize: 5 * 1024 * 1024 // 5MB –ª–∏–º–∏—Ç –Ω–∞ —Ñ–∞–π–ª
    }
  })

  // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–æ—É—Ç—ã
  await app.register(perfumeRoutes, { prefix: '/api' })
  await app.register(uploadRoutes, { prefix: '/api' })
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
async function startServer() {
  try {
    await registerPlugins()
    
    const port = process.env.PORT ? parseInt(process.env.PORT) : 3000
    const host = process.env.HOST || '0.0.0.0'

    await app.listen({ port, host })
    console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ ${host}:${port}`)
  } catch (err) {
    app.log.error(err)
    process.exit(1)
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
process.on('unhandledRejection', (err) => {
  console.error('‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', err)
  process.exit(1)
})

startServer()
