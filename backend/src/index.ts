import Fastify from 'fastify'
import path from 'path'
import fastifyMultipart from '@fastify/multipart'
import fastifyStatic from '@fastify/static'
import fastifyCors from '@fastify/cors'
import { PATHS } from './config/paths'
import dotenv from 'dotenv'
import perfumePlugin from './plugins/perfumePlugin'
import uploadPlugin from './plugins/uploadPlugin'

import fastifySwagger from '@fastify/swagger'
import fastifySwaggerUi from '@fastify/swagger-ui'
import fastifyHelmet from '@fastify/helmet'

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config()

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const app = Fastify({
  logger: true,
  ajv: {
    customOptions: {
      removeAdditional: 'all',
      coerceTypes: true,
      useDefaults: true
    }
  }
})

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–ª–∞–≥–∏–Ω—ã
async function registerPlugins() {
  // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º Helmet –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–≤—ã–º)
  await app.register(fastifyHelmet, {
    // –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    contentSecurityPolicy: {
      directives: {
        defaultSrc: ["'self'"],
        scriptSrc: ["'self'", "'unsafe-inline'", "'unsafe-eval'"], // –î–æ–±–∞–≤–ª–µ–Ω–æ 'unsafe-inline' –∏ 'unsafe-eval' –¥–ª—è Swagger UI
        styleSrc: ["'self'", "'unsafe-inline'"], // –î–æ–±–∞–≤–ª–µ–Ω–æ 'unsafe-inline' –¥–ª—è Swagger UI
        imgSrc: ["'self'", "data:", "blob:", "validator.swagger.io"], // –î–æ–±–∞–≤–ª–µ–Ω–æ validator.swagger.io
        connectSrc: ["'self'", "https:", "http:", "ws:", "wss:", "validator.swagger.io"], // –î–æ–±–∞–≤–ª–µ–Ω–æ http:, ws:, wss: –∏ validator.swagger.io
        fontSrc: ["'self'"],
        objectSrc: ["'none'"],
        mediaSrc: ["'self'", "data:", "blob:"],
        frameSrc: ["'none'"],
      }
    },
    // –ó–∞—â–∏—Ç–∞ –æ—Ç –∫–ª–∏–∫–¥–∂–µ–∫–∏–Ω–≥–∞
    xFrameOptions: {
      action: 'deny'
    },
    // –ó–∞—â–∏—Ç–∞ –æ—Ç MIME-sniffing
    contentTypeOptions: true,
    // –ó–∞—â–∏—Ç–∞ –æ—Ç XSS
    xssFilter: true,
    // –ó–∞–ø—Ä–µ—Ç –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É –≤ iframe
    // frameguard: {
      // action: 'deny'
    // },
    // –ó–∞–ø—Ä–µ—Ç –Ω–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    noCache: true,
    // –ó–∞–ø—Ä–µ—Ç –Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ iframe
    referrerPolicy: {
      policy: 'no-referrer'
    },
    // –ó–∞–ø—Ä–µ—Ç –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ MIME
    permittedCrossDomainPolicies: {
      permittedPolicies: 'none'
    },
    // –ó–∞—â–∏—Ç–∞ –æ—Ç DNS prefetching
    dnsPrefetchControl: {
      allow: false
    },
    // –ó–∞—â–∏—Ç–∞ –æ—Ç –∫–ª–∏–∫–¥–∂–µ–∫–∏–Ω–≥–∞
    hidePoweredBy: true
  } )

  // CORS –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º
  await app.register(fastifyCors, {
    origin: process.env.FRONTEND_URL || 'http://localhost:5173',
    credentials: true
  } )

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑–¥–∞—á–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
  await app.register(fastifyStatic, {
    root: path.dirname(PATHS.IMAGES_ROOT), // –ö–æ—Ä–Ω–µ–≤–∞—è –ø–∞–ø–∫–∞ public
    prefix: '/', // –ë–∞–∑–æ–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å
    decorateReply: false
  })

  // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ multipart –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
  await app.register(fastifyMultipart, {
    limits: {
      fileSize: 5 * 1024 * 1024 // 5MB –ª–∏–º–∏—Ç –Ω–∞ —Ñ–∞–π–ª
    }
  })

  // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–ª–∞–≥–∏–Ω—ã —Å –º–∞—Ä—à—Ä—É—Ç–∞–º–∏
  await app.register(perfumePlugin, { prefix: '/api' })
  await app.register(uploadPlugin, { prefix: '/api' })

  // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º Swagger –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ API –Ω–∞–ø—Ä—è–º—É—é
  await app.register(fastifySwagger, {
    openapi: {
      info: {
        title: 'Perfume Shop API',
        description: 'API –¥–ª—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞ –ø–∞—Ä—Ñ—é–º–µ—Ä–∏–∏',
        version: '1.0.0',
        contact: {
          name: 'API Support',
          email: 'support@perfumeshop.com'
        }
      },
      servers: [
        {
          url: 'http://localhost:3000',
          description: 'Development server'
        },
        {
          url: 'https://api.perfumeshop.com',
          description: 'Production server'
        }
      ],
      components: {
        securitySchemes: {
          bearerAuth: {
            type: 'http',
            scheme: 'bearer',
            bearerFormat: 'JWT'
          }
        }
      },
      tags: [
        { name: 'perfumes', description: '–û–ø–µ—Ä–∞—Ü–∏–∏ —Å –ø–∞—Ä—Ñ—é–º–µ—Ä–∏–µ–π' },
        { name: 'images', description: '–û–ø–µ—Ä–∞—Ü–∏–∏ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏' }
      ]
    }
  } )

  await app.register(fastifySwaggerUi, {
    routePrefix: '/docs',
    uiConfig: {
      docExpansion: 'list',
      deepLinking: true,
      displayRequestDuration: true
    },
    staticCSP: false, // –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ false
    // transformStaticCSP: (header) => header // –£–¥–∞–ª–µ–Ω–∞ —ç—Ç–∞ —Å—Ç—Ä–æ–∫–∞
  })
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
async function startServer() {
  try {
    await registerPlugins()

    const port = process.env.PORT ? parseInt(process.env.PORT) : 3000
    const host = process.env.HOST || '0.0.0.0'

    await app.listen({ port, host })
    console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ ${host}:${port}`)
    console.log(`üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: Helmet –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω`)
    
    app.ready((err) => {
      if (err) throw err
      console.log(`üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É http://${host}:${port}/docs` )
    })

  } catch (err) {
    app.log.error(err)
    process.exit(1)
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
process.on('unhandledRejection', (err) => {
  console.error('‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', err)
  process.exit(1)
})

startServer()
